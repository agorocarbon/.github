name: Nodejs code check
on:
  push:
    branches-ignore:
      - main
      - master
  pull_request:
    types:
      - opened
      - synchronize
      - closed
  
jobs:
  setup-env:
    name: Setup Env
    runs-on: ubuntu-latest
    container:
      image: node:14
    defaults:
      run:
        shell: bash
    outputs:
      output1: ${{ steps.step1.outputs.test }}
    steps:
    - name: Get Code
      uses: actions/checkout@v2

    - name: Get yarn cache directory path
      run: echo "YARN_CACHE_DIR=$(yarn cache dir)" >> $GITHUB_ENV

    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: ${{ env.YARN_CACHE_DIR }}
        key: ${{ github.repository }}-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ github.repository }}-${{ runner.os }}-yarn-

    - name: Install node dependencies to populate cache
      run: yarn install --frozen-lockfile

  code-linter:
    name: Code Linter
    needs: setup-env
    runs-on: ubuntu-latest
    container: node:14
    defaults:
      run:
        shell: bash
    steps:
    - name: Get Code
      uses: actions/checkout@v2

    - name: Get yarn cache directory path
      run: echo "YARN_CACHE_DIR=$(yarn cache dir)" >> $GITHUB_ENV

    - name: Cache node modules
      id: yarn-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.YARN_CACHE_DIR }}
        key: ${{ github.repository }}-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ github.repository }}-${{ runner.os }}-yarn-

    - name: Install node dependencies
      run: yarn install --frozen-lockfile

    - name: Code Quality Run Lint
      run: yarn lint
